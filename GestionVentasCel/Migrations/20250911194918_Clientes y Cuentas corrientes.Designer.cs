// <auto-generated />
using System;
using GestionVentasCel.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionVentasCel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250911194918_Clientes y Cuentas corrientes")]
    partial class ClientesyCuentascorrientes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionVentasCel.models.CuentaCorreinte.CuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("CuentasCorrientes");
                });

            modelBuilder.Entity("GestionVentasCel.models.CuentaCorreinte.MovimientoCuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuentaCorrienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CuentaCorrienteId");

                    b.ToTable("MovimientosCuentasCorrientes");
                });

            modelBuilder.Entity("GestionVentasCel.models.articulo.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Aviso_stock")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("GestionVentasCel.models.categoria.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GestionVentasCel.models.persona.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apellido")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Calle")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CondicionIVA")
                        .HasColumnType("longtext");

                    b.Property<string>("Dni")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<int?>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Personas", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("GestionVentasCel.models.clientes.Cliente", b =>
                {
                    b.HasBaseType("GestionVentasCel.models.persona.Persona");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("GestionVentasCel.models.usuario.Usuario", b =>
                {
                    b.HasBaseType("GestionVentasCel.models.persona.Persona");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("GestionVentasCel.models.CuentaCorreinte.CuentaCorriente", b =>
                {
                    b.HasOne("GestionVentasCel.models.clientes.Cliente", "Cliente")
                        .WithOne("CuentaCorriente")
                        .HasForeignKey("GestionVentasCel.models.CuentaCorreinte.CuentaCorriente", "ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionVentasCel.models.CuentaCorreinte.MovimientoCuentaCorriente", b =>
                {
                    b.HasOne("GestionVentasCel.models.CuentaCorreinte.CuentaCorriente", "CuentaCorriente")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaCorrienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuentaCorriente");
                });

            modelBuilder.Entity("GestionVentasCel.models.articulo.Articulo", b =>
                {
                    b.HasOne("GestionVentasCel.models.categoria.Categoria", "Categoria")
                        .WithMany("Articulos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("GestionVentasCel.models.clientes.Cliente", b =>
                {
                    b.HasOne("GestionVentasCel.models.persona.Persona", null)
                        .WithOne()
                        .HasForeignKey("GestionVentasCel.models.clientes.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionVentasCel.models.usuario.Usuario", b =>
                {
                    b.HasOne("GestionVentasCel.models.persona.Persona", null)
                        .WithOne()
                        .HasForeignKey("GestionVentasCel.models.usuario.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionVentasCel.models.CuentaCorreinte.CuentaCorriente", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("GestionVentasCel.models.categoria.Categoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("GestionVentasCel.models.clientes.Cliente", b =>
                {
                    b.Navigation("CuentaCorriente");
                });
#pragma warning restore 612, 618
        }
    }
}
